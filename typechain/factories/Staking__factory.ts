/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISLARegistry",
        name: "slaRegistry_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "whitelistedContract_",
        type: "bool",
      },
      {
        internalType: "uint128",
        name: "slaID_",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "leverage_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractOwner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "messengerAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dpTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dpTokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dpTokenSymbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "duTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "duTokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "duTokenSymbol",
        type: "string",
      },
    ],
    name: "DTokensCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "periodId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercentagePrecision",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "ProviderRewardGenerated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "periodId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usersStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compensation",
        type: "uint256",
      },
    ],
    name: "UserCompensationGenerated",
    type: "event",
  },
  {
    inputs: [],
    name: "DSLAburnRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "addAllowedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_userAddresses",
        type: "address[]",
      },
    ],
    name: "addUsersToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dpTokenRegistry",
    outputs: [
      {
        internalType: "contract dToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "duTokenRegistry",
    outputs: [
      {
        internalType: "contract dToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllowedTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "isAllowedToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leverage",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messengerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providerPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredStakers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_userAddresses",
        type: "address[]",
      },
    ],
    name: "removeUsersFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slaID",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usersPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistedContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610160604052601e600b55600f600c553480156200001c57600080fd5b5060405162001b8e38038062001b8e833981810160405260c08110156200004257600080fd5b508051602082015160408301516060840151608085015160a090950151939492939192909160006200007c6001600160e01b03620003b316565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060018081905550856001600160a01b031663683048356040518163ffffffff1660e01b815260040160206040518083038186803b1580156200010757600080fd5b505afa1580156200011c573d6000803e3d6000fd5b505050506040513d60208110156200013357600080fd5b5051600280546001600160a01b0319166001600160a01b0392831617905560408051639fc4caa560e01b8152905191881691639fc4caa591600480820192602092909190829003018186803b1580156200018c57600080fd5b505afa158015620001a1573d6000803e3d6000fd5b505050506040513d6020811015620001b857600080fd5b505160601b6001600160601b03191660805284151560f81b61012090815260025460408051637b8041cf60e11b8152905160009384936001600160a01b03169263f700839e9260048083019392829003018186803b1580156200021a57600080fd5b505afa1580156200022f573d6000803e3d6000fd5b505050506040513d6101208110156200024757600080fd5b50805160e09091015160025460408051638b8e530960e01b815290519395509193506001600160a01b031691638b8e530991600480820192602092909190829003018186803b1580156200029a57600080fd5b505afa158015620002af573d6000803e3d6000fd5b505050506040513d6020811015620002c657600080fd5b505160601b6001600160601b03191660a0526101008290526001600160a01b0384166000908152600a602052604090208054600160ff19909116179055608086901b6001600160801b03191660e0526001600160401b03818116908616118015906200033c57506001856001600160401b031610155b62000383576040805162461bcd60e51b8152602060048201526012602482015271696e636f7272656374206c6576657261676560701b604482015290519081900360640190fd5b505060c092831b6001600160c01b0319166101405260601b6001600160601b03191690915250620003b792505050565b3390565b60805160601c60a05160601c60c05160601c60e05160801c610100516101205160f81c6101405160c01c61176c620004226000398061109552508061107152508061120852508061070e52806114e0525080610741528061090752806114445250505061176c6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063a7e8d8d41161007c578063a7e8d8d4146103dd578063b7bc347e14610403578063cbe230c31461040b578063f2db10fe14610431578063f2fde38b14610455578063fd5e6dd11461047b57610137565b8063715018a6146103315780638d21c770146103395780638da5cb5b146103a75780639b19251a146103af578063a224ee9c146103d557610137565b80634fb2647e116100ff5780634fb2647e1461021f5780635ae698ff146102455780635c1c20de146102e65780635e5f2e26146102ee578063639b6fc31461030b57610137565b8063171e44ea1461013c57806318e45427146101645780632c86d98e14610180578063484fbf2b146101a55780634e0c91f6146101dd575b600080fd5b6101626004803603602081101561015257600080fd5b50356001600160a01b0316610498565b005b61016c61106f565b604080519115158252519081900360200190f35b610188611093565b6040805167ffffffffffffffff9092168252519081900360200190f35b6101cb600480360360208110156101bb57600080fd5b50356001600160a01b03166110b7565b60408051918252519081900360200190f35b610203600480360360208110156101f357600080fd5b50356001600160a01b03166110c9565b604080516001600160a01b039092168252519081900360200190f35b6102036004803603602081101561023557600080fd5b50356001600160a01b03166110e4565b6101626004803603602081101561025b57600080fd5b810190602081018135600160201b81111561027557600080fd5b82018360208201111561028757600080fd5b803590602001918460208302840111600160201b831117156102a857600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506110ff945050505050565b6101cb611206565b6102036004803603602081101561030457600080fd5b503561122a565b6101cb6004803603602081101561032157600080fd5b50356001600160a01b0316611251565b610162611263565b6101626004803603602081101561034f57600080fd5b810190602081018135600160201b81111561036957600080fd5b82018360208201111561037b57600080fd5b803590602001918460208302840111600160201b8311171561039c57600080fd5b50909250905061130f565b61020361141e565b61016c600480360360208110156103c557600080fd5b50356001600160a01b031661142d565b610203611442565b61016c600480360360208110156103f357600080fd5b50356001600160a01b0316611466565b6101cb61147b565b61016c6004803603602081101561042157600080fd5b50356001600160a01b0316611481565b6104396114de565b604080516001600160801b039092168252519081900360200190f35b6101626004803603602081101561046b57600080fd5b50356001600160a01b0316611502565b6102036004803603602081101561049157600080fd5b5035611604565b6104a0611611565b6001600160a01b03166104b161141e565b6001600160a01b0316146104fa576040805162461bcd60e51b81526020600482018190526024820152600080516020611717833981519152604482015290519081900360640190fd5b60025460408051637b8041cf60e11b815290516000926001600160a01b03169163f700839e91600480830192610120929190829003018186803b15801561054057600080fd5b505afa158015610554573d6000803e3d6000fd5b505050506040513d61012081101561056b57600080fd5b5060c00151905061057b82611481565b156105bd576040805162461bcd60e51b815260206004820152600d60248201526c185b1c9958591e481859191959609a1b604482015290519081900360640190fd5b6002546040805163cbe230c360e01b81526001600160a01b0385811660048301529151919092169163cbe230c3916024808301926020929190829003018186803b15801561060a57600080fd5b505afa15801561061e573d6000803e3d6000fd5b505050506040513d602081101561063457600080fd5b5051610675576040805162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b604482015290519081900360640190fd5b6009805460018101825560008290527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0180546001600160a01b0319166001600160a01b03851617905554811015610707576040805162461bcd60e51b815260206004820152601060248201526f0dac2f040e8ded6cadc40d8cadccee8d60831b604482015290519081900360640190fd5b606061073b7f00000000000000000000000000000000000000000000000000000000000000006001600160801b0316611615565b905060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166376ff294b6040518163ffffffff1660e01b815260040160006040518083038186803b15801561079857600080fd5b505afa1580156107ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156107d557600080fd5b8101908080516040519392919084600160201b8211156107f457600080fd5b90830190602082018581111561080957600080fd5b8251600160201b81118282018810171561082257600080fd5b82525081516020918201929091019080838360005b8381101561084f578181015183820152602001610837565b50505050905090810190601f16801561087c5780820380516001836020036101000a031916815260200191505b50604052505050905060608260405160200180806744534c412d53502d60c01b81525060080182805190602001908083835b602083106108cd5780518252601f1990920191602091820191016108ae565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052905060607f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166346cd68016040518163ffffffff1660e01b815260040160006040518083038186803b15801561095e57600080fd5b505afa158015610972573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561099b57600080fd5b8101908080516040519392919084600160201b8211156109ba57600080fd5b9083019060208201858111156109cf57600080fd5b8251600160201b8111828201881017156109e857600080fd5b82525081516020918201929091019080838360005b83811015610a155781810151838201526020016109fd565b50505050905090810190601f168015610a425780820380516001836020036101000a031916815260200191505b50604052505050905060608460405160200180806744534c412d4c502d60c01b81525060080182805190602001908083835b60208310610a935780518252601f199092019160209182019101610a74565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405160208183030381529060405290506000876001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610b0457600080fd5b505afa158015610b18573d6000803e3d6000fd5b505050506040513d6020811015610b2e57600080fd5b50516002546040516340c71f0f60e01b815260ff831660448201526060600482019081528851606483015288519394506000936001600160a01b03909316926340c71f0f928a928a928892829160248201916084019060208801908083838e5b83811015610ba6578181015183820152602001610b8e565b50505050905090810190601f168015610bd35780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610c06578181015183820152602001610bee565b50505050905090810190601f168015610c335780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610c5557600080fd5b505af1158015610c69573d6000803e3d6000fd5b505050506040513d6020811015610c7f57600080fd5b50516002546040516340c71f0f60e01b815260ff851660448201526060600482019081528751606483015287519394506000936001600160a01b03909316926340c71f0f92899289928992829160248201916084019060208801908083838e5b83811015610cf7578181015183820152602001610cdf565b50505050905090810190601f168015610d245780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610d57578181015183820152602001610d3f565b50505050905090810190601f168015610d845780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610da657600080fd5b505af1158015610dba573d6000803e3d6000fd5b505050506040513d6020811015610dd057600080fd5b8101908080519060200190929190505050905080600660008c6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600560008c6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550816001600160a01b0316816001600160a01b03168b6001600160a01b03167fce8c390dc55dbcd418078f1391fbb7d471c01c228fc4464926095354cb27c02988888c8c6040518080602001806020018060200180602001858103855289818151815260200191508051906020019080838360005b83811015610f03578181015183820152602001610eeb565b50505050905090810190601f168015610f305780820380516001836020036101000a031916815260200191505b5085810384528851815288516020918201918a019080838360005b83811015610f63578181015183820152602001610f4b565b50505050905090810190601f168015610f905780820380516001836020036101000a031916815260200191505b50858103835287518152875160209182019189019080838360005b83811015610fc3578181015183820152602001610fab565b50505050905090810190601f168015610ff05780820380516001836020036101000a031916815260200191505b50858103825286518152865160209182019188019080838360005b8381101561102357818101518382015260200161100b565b50505050905090810190601f1680156110505780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390a450505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60046020526000908152604090205481565b6005602052600090815260409020546001600160a01b031681565b6006602052600090815260409020546001600160a01b031681565b611107611611565b6001600160a01b031661111861141e565b6001600160a01b031614611161576040805162461bcd60e51b81526020600482018190526024820152600080516020611717833981519152604482015290519081900360640190fd5b60005b815181101561120257600a600083838151811061117d57fe5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff166111fa576001600a60008484815181106111ba57fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600101611164565b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6009818154811061123757fe5b6000918252602090912001546001600160a01b0316905081565b60036020526000908152604090205481565b61126b611611565b6001600160a01b031661127c61141e565b6001600160a01b0316146112c5576040805162461bcd60e51b81526020600482018190526024820152600080516020611717833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b611317611611565b6001600160a01b031661132861141e565b6001600160a01b031614611371576040805162461bcd60e51b81526020600482018190526024820152600080516020611717833981519152604482015290519081900360640190fd5b60005b8181101561141957600a600084848481811061138c57fe5b602090810292909201356001600160a01b03168352508101919091526040016000205460ff1615611411576000600a60008585858181106113c957fe5b905060200201356001600160a01b03166001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b600101611374565b505050565b6000546001600160a01b031690565b600a6020526000908152604090205460ff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60086020526000908152604090205460ff1681565b60095490565b6000805b6009548110156114d357826001600160a01b0316600982815481106114a657fe5b6000918252602090912001546001600160a01b031614156114cb5760019150506114d9565b600101611485565b50600090505b919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b61150a611611565b6001600160a01b031661151b61141e565b6001600160a01b031614611564576040805162461bcd60e51b81526020600482018190526024820152600080516020611717833981519152604482015290519081900360640190fd5b6001600160a01b0381166115a95760405162461bcd60e51b81526004018080602001828103825260268152602001806116f16026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6007818154811061123757fe5b3390565b6060818061163c5750506040805180820190915260018152600360fc1b60208201526114d9565b8060005b811561165457600101600a82049150611640565b60608167ffffffffffffffff8111801561166d57600080fd5b506040519080825280601f01601f191660200182016040528015611698576020820181803683370190505b50905060001982015b84156116e657600a850660300160f81b828280600190039350815181106116c457fe5b60200101906001600160f81b031916908160001a905350600a850494506116a1565b509594505050505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a26469706673582212209271284f68cbda36583b575f4b58d33fc7b07a65ed0c4556fcc885fde8c53c8d64736f6c63430006060033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    slaRegistry_: string,
    whitelistedContract_: boolean,
    slaID_: BigNumberish,
    leverage_: BigNumberish,
    contractOwner_: string,
    messengerAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      slaRegistry_,
      whitelistedContract_,
      slaID_,
      leverage_,
      contractOwner_,
      messengerAddress_,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    slaRegistry_: string,
    whitelistedContract_: boolean,
    slaID_: BigNumberish,
    leverage_: BigNumberish,
    contractOwner_: string,
    messengerAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      slaRegistry_,
      whitelistedContract_,
      slaID_,
      leverage_,
      contractOwner_,
      messengerAddress_,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
