/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISLARegistry",
        name: "slaRegistry_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "whitelistedContract_",
        type: "bool",
      },
      {
        internalType: "uint128",
        name: "slaID_",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "leverage_",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "contractOwner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "messengerAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "dpTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dpTokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "dpTokenSymbol",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "duTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "duTokenName",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "duTokenSymbol",
        type: "string",
      },
    ],
    name: "DTokensCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "periodId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercentage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardPercentagePrecision",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "ProviderRewardGenerated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "periodId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "userStake",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "leverage",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "compensation",
        type: "uint256",
      },
    ],
    name: "UserCompensationGenerated",
    type: "event",
  },
  {
    inputs: [],
    name: "DSLAburnRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "addAllowedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_userAddresses",
        type: "address[]",
      },
    ],
    name: "addUsersToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allowedTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "dpTokenRegistry",
    outputs: [
      {
        internalType: "contract dToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "duTokenRegistry",
    outputs: [
      {
        internalType: "contract dToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllowedTokensLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "isAllowedToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastProviderStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastUserStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "leverage",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messengerAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "providerRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "providersPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registeredStakers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_userAddresses",
        type: "address[]",
      },
    ],
    name: "removeUsersFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "slaID",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "usersPool",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistedContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610160604052601e600d55600f600e553480156200001c57600080fd5b5060405162001a2138038062001a218339810160408190526200003f91620003ed565b6200004a3362000356565b60018081905550856001600160a01b031663683048356040518163ffffffff1660e01b815260040160206040518083038186803b1580156200008b57600080fd5b505afa158015620000a0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000c6919062000485565b600260006101000a8154816001600160a01b0302191690836001600160a01b03160217905550856001600160a01b0316639fc4caa56040518163ffffffff1660e01b815260040160206040518083038186803b1580156200012657600080fd5b505afa1580156200013b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000161919062000485565b6001600160a01b0390811660805285151561012090815260025460408051637b8041cf60e11b81529051600094859493169263f700839e9260048082019391829003018186803b158015620001b557600080fd5b505afa158015620001ca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f09190620004ac565b5097505050505050509150600260009054906101000a90046001600160a01b03166001600160a01b0316638b8e53096040518163ffffffff1660e01b815260040160206040518083038186803b1580156200024a57600080fd5b505afa1580156200025f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000285919062000485565b6001600160a01b0390811660a05261010083905284166000908152600c60205260409020805460ff191660011790556001600160801b03861660e0526001600160401b0380821690861611801590620002e857506001856001600160401b031610155b6200032e5760405162461bcd60e51b8152602060048201526012602482015271696e636f7272656374206c6576657261676560701b604482015260640160405180910390fd5b50506001600160401b0390921661014052506001600160a01b031660c0525062000528915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620003bc57600080fd5b50565b80518015158114620003d057600080fd5b919050565b80516001600160401b0381168114620003d057600080fd5b60008060008060008060c087890312156200040757600080fd5b86516200041481620003a6565b95506200042460208801620003bf565b60408801519095506001600160801b03811681146200044257600080fd5b93506200045260608801620003d5565b925060808701516200046481620003a6565b60a08801519092506200047781620003a6565b809150509295509295509295565b6000602082840312156200049857600080fd5b8151620004a581620003a6565b9392505050565b60008060008060008060008060006101208a8c031215620004cc57600080fd5b8951985060208a0151975060408a0151965060608a0151955060808a0151945060a08a0151935060c08a015192506200050860e08b01620003d5565b9150620005196101008b01620003bf565b90509295985092959850929598565b60805160a05160c05160e05161010051610120516101405161147a620005a7600039600061021c01526000610192015260006102f9015260008181610447015281816107c8015261092b0152600081816103a20152818161071e015281816107fd0152818161088101526109600152600050506000505061147a6000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638d21c770116100de578063b7bc347e11610097578063e527c36711610071578063e527c36714610422578063f2db10fe14610442578063f2fde38b14610481578063fd5e6dd11461049457600080fd5b8063b7bc347e146103e7578063cbe230c3146103ef578063ded81d2b1461040257600080fd5b80638d21c770146103365780638da5cb5b146103495780639b19251a1461035a5780639eacc13b1461037d578063a224ee9c1461039d578063a7e8d8d4146103c457600080fd5b80634e0c91f6116101305780634e0c91f6146102775780634fb2647e146102b85780635ae698ff146102e15780635c1c20de146102f45780635e5f2e261461031b578063715018a61461032e57600080fd5b8063171e44ea1461017857806318e454271461018d5780631f285703146101c957806325091a08146101f75780632c86d98e14610217578063484fbf2b14610257575b600080fd5b61018b610186366004610fae565b6104a7565b005b6101b47f000000000000000000000000000000000000000000000000000000000000000081565b60405190151581526020015b60405180910390f35b6101e96101d7366004610fd2565b600f6020526000908152604090205481565b6040519081526020016101c0565b6101e9610205366004610fae565b60036020526000908152604090205481565b61023e7f000000000000000000000000000000000000000000000000000000000000000081565b60405167ffffffffffffffff90911681526020016101c0565b6101e9610265366004610fae565b60056020526000908152604090205481565b6102a0610285366004610fae565b6007602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016101c0565b6102a06102c6366004610fae565b6008602052600090815260409020546001600160a01b031681565b61018b6102ef366004611032565b610c00565b6101e97f000000000000000000000000000000000000000000000000000000000000000081565b6102a0610329366004610fd2565b610ce5565b61018b610d0f565b61018b6103443660046110e4565b610d45565b6000546001600160a01b03166102a0565b6101b4610368366004610fae565b600c6020526000908152604090205460ff1681565b6101e961038b366004610fae565b60046020526000908152604090205481565b6102a07f000000000000000000000000000000000000000000000000000000000000000081565b6101b46103d2366004610fae565b600a6020526000908152604090205460ff1681565b600b546101e9565b6101b46103fd366004610fae565b610e34565b6101e9610410366004610fae565b60066020526000908152604090205481565b6101e9610430366004610fd2565b60106020526000908152604090205481565b6104697f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160801b0390911681526020016101c0565b61018b61048f366004610fae565b610e9e565b6102a06104a2366004610fd2565b610f39565b6000546001600160a01b031633146104da5760405162461bcd60e51b81526004016104d190611159565b60405180910390fd5b60025460408051637b8041cf60e11b815290516000926001600160a01b03169163f700839e91600480830192610120929190829003018186803b15801561052057600080fd5b505afa158015610534573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055891906111a3565b5050965050505050505061056b82610e34565b156105c45760405162461bcd60e51b8152602060048201526024808201527f5468697320746f6b656e20686173206265656e20616c6c6f77656420616c726560448201526330b23c9760e11b60648201526084016104d1565b60025460405163cbe230c360e01b81526001600160a01b0384811660048301529091169063cbe230c39060240160206040518083038186803b15801561060957600080fd5b505afa15801561061d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106419190611229565b61068d5760405162461bcd60e51b815260206004820152601a60248201527f5468697320746f6b656e206973206e6f7420616c6c6f7765642e00000000000060448201526064016104d1565b600b805460018101825560008290527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90180546001600160a01b0319166001600160a01b0385161790555481101561071a5760405162461bcd60e51b815260206004820152601060248201526f0dac2f040e8ded6cadc40d8cadccee8d60831b60448201526064016104d1565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166376ff294b6040518163ffffffff1660e01b815260040160006040518083038186803b15801561077557600080fd5b505afa158015610789573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107b19190810190611274565b6040516308cb8e2360e11b81526001600160801b037f00000000000000000000000000000000000000000000000000000000000000001660048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906311971c469060240160006040518083038186803b15801561083f57600080fd5b505afa158015610853573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261087b9190810190611274565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166346cd68016040518163ffffffff1660e01b815260040160006040518083038186803b1580156108d857600080fd5b505afa1580156108ec573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109149190810190611274565b60405163cb8d3fcf60e01b81526001600160801b037f00000000000000000000000000000000000000000000000000000000000000001660048201529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cb8d3fcf9060240160006040518083038186803b1580156109a257600080fd5b505afa1580156109b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109de9190810190611274565b90506000866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610a1b57600080fd5b505afa158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a539190611308565b6002546040516340c71f0f60e01b81529192506000916001600160a01b03909116906340c71f0f90610a8d90899089908790600401611357565b602060405180830381600087803b158015610aa757600080fd5b505af1158015610abb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adf9190611390565b6002546040516340c71f0f60e01b81529192506000916001600160a01b03909116906340c71f0f90610b1990889088908890600401611357565b602060405180830381600087803b158015610b3357600080fd5b505af1158015610b47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6b9190611390565b6001600160a01b03808b16600081815260086020908152604080832080548688166001600160a01b0319918216811790925560079093529281902080549589169590921685179091555193945091927fce8c390dc55dbcd418078f1391fbb7d471c01c228fc4464926095354cb27c02990610bed908a908a908e908e906113ad565b60405180910390a4505050505050505050565b6000546001600160a01b03163314610c2a5760405162461bcd60e51b81526004016104d190611159565b60005b8151811015610ce157600c6000838381518110610c4c57610c4c611405565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16610ccf576001600c6000848481518110610c8f57610c8f611405565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80610cd98161141b565b915050610c2d565b5050565b600b8181548110610cf557600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610d395760405162461bcd60e51b81526004016104d190611159565b610d436000610f49565b565b6000546001600160a01b03163314610d6f5760405162461bcd60e51b81526004016104d190611159565b60005b81811015610e2f57600c6000848484818110610d9057610d90611405565b9050602002016020810190610da59190610fae565b6001600160a01b0316815260208101919091526040016000205460ff1615610e1d576000600c6000858585818110610ddf57610ddf611405565b9050602002016020810190610df49190610fae565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790555b80610e278161141b565b915050610d72565b505050565b6000805b600b54811015610e9557826001600160a01b0316600b8281548110610e5f57610e5f611405565b6000918252602090912001546001600160a01b03161415610e835750600192915050565b80610e8d8161141b565b915050610e38565b50600092915050565b6000546001600160a01b03163314610ec85760405162461bcd60e51b81526004016104d190611159565b6001600160a01b038116610f2d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104d1565b610f3681610f49565b50565b60098181548110610cf557600080fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610f3657600080fd5b600060208284031215610fc057600080fd5b8135610fcb81610f99565b9392505050565b600060208284031215610fe457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561102a5761102a610feb565b604052919050565b6000602080838503121561104557600080fd5b823567ffffffffffffffff8082111561105d57600080fd5b818501915085601f83011261107157600080fd5b81358181111561108357611083610feb565b8060051b9150611094848301611001565b81815291830184019184810190888411156110ae57600080fd5b938501935b838510156110d857843592506110c883610f99565b82825293850193908501906110b3565b98975050505050505050565b600080602083850312156110f757600080fd5b823567ffffffffffffffff8082111561110f57600080fd5b818501915085601f83011261112357600080fd5b81358181111561113257600080fd5b8660208260051b850101111561114757600080fd5b60209290920196919550909350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8051801515811461119e57600080fd5b919050565b60008060008060008060008060006101208a8c0312156111c257600080fd5b8951985060208a0151975060408a0151965060608a0151955060808a0151945060a08a0151935060c08a0151925060e08a015167ffffffffffffffff8116811461120b57600080fd5b915061121a6101008b0161118e565b90509295985092959850929598565b60006020828403121561123b57600080fd5b610fcb8261118e565b60005b8381101561125f578181015183820152602001611247565b8381111561126e576000848401525b50505050565b60006020828403121561128657600080fd5b815167ffffffffffffffff8082111561129e57600080fd5b818401915084601f8301126112b257600080fd5b8151818111156112c4576112c4610feb565b6112d7601f8201601f1916602001611001565b91508082528560208285010111156112ee57600080fd5b6112ff816020840160208601611244565b50949350505050565b60006020828403121561131a57600080fd5b815160ff81168114610fcb57600080fd5b60008151808452611343816020860160208601611244565b601f01601f19169290920160200192915050565b60608152600061136a606083018661132b565b828103602084015261137c818661132b565b91505060ff83166040830152949350505050565b6000602082840312156113a257600080fd5b8151610fcb81610f99565b6080815260006113c0608083018761132b565b82810360208401526113d2818761132b565b905082810360408401526113e6818661132b565b905082810360608401526113fa818561132b565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561143d57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212200c8693ba0a6361330b8f875c244abbee4107ab3b5808829ac1e66c15075ab2db64736f6c63430008090033";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    slaRegistry_: string,
    whitelistedContract_: boolean,
    slaID_: BigNumberish,
    leverage_: BigNumberish,
    contractOwner_: string,
    messengerAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      slaRegistry_,
      whitelistedContract_,
      slaID_,
      leverage_,
      contractOwner_,
      messengerAddress_,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    slaRegistry_: string,
    whitelistedContract_: boolean,
    slaID_: BigNumberish,
    leverage_: BigNumberish,
    contractOwner_: string,
    messengerAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      slaRegistry_,
      whitelistedContract_,
      slaID_,
      leverage_,
      contractOwner_,
      messengerAddress_,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
