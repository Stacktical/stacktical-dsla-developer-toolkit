/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MessengerRegistry,
  MessengerRegistryInterface,
} from "../MessengerRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "messengerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "specificationUrl",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "precision",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "MessengerModified",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "ownerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "messengerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "specificationUrl",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "precision",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "MessengerRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "getMessengers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ownerAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "messengerAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "specificationUrl",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "precision",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "requestsCounter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "fulfillsCounter",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct MessengerRegistry.Messenger[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMessengersLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_specificationUrl",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_messengerId",
        type: "uint256",
      },
    ],
    name: "modifyMessenger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "callerAddress_",
        type: "address",
      },
      {
        internalType: "address",
        name: "messengerAddress_",
        type: "address",
      },
      {
        internalType: "string",
        name: "specificationUrl_",
        type: "string",
      },
    ],
    name: "registerMessenger",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "messengerAddress_",
        type: "address",
      },
    ],
    name: "registeredMessengers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setSLARegistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061114e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806369b5354b14610067578063822d332e146100855780639f69d7f81461009a578063eabb8a73146100ab578063ef4003db146100be578063f3881589146100fa575b600080fd5b61006f610102565b60405161007c9190610d13565b60405180910390f35b610098610093366004610e53565b61048c565b005b60005460405190815260200161007c565b6100986100b9366004610eb7565b610626565b6100ea6100cc366004610f1c565b6001600160a01b031660009081526001602052604090205460ff1690565b604051901515815260200161007c565b610098610b88565b600080546060919067ffffffffffffffff81111561012257610122610f40565b6040519080825280602002602001820160405280156101a557816020015b6101926040518060e0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160608152602001600081526020016000815260200160008152602001600081525090565b8152602001906001900390816101405790505b50905060005b6000548110156104865760008082815481106101c9576101c9610f56565b906000526020600020906007020160010160009054906101000a90046001600160a01b031690506040518060e001604052806000848154811061020e5761020e610f56565b600091825260208083206007909202909101546001600160a01b0316835281549201918590811061024157610241610f56565b60009182526020808320600160079093020191909101546001600160a01b0316835281549201918590811061027857610278610f56565b9060005260206000209060070201600201805461029490610f6c565b80601f01602080910402602001604051908101604052809291908181526020018280546102c090610f6c565b801561030d5780601f106102e25761010080835404028352916020019161030d565b820191906000526020600020905b8154815290600101906020018083116102f057829003601f168201915b505050505081526020016000848154811061032a5761032a610f56565b9060005260206000209060070201600301548152602001826001600160a01b031663663c22696040518163ffffffff1660e01b815260040160206040518083038186803b15801561037a57600080fd5b505afa15801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b29190610fa1565b8152602001826001600160a01b031663a50c54256040518163ffffffff1660e01b815260040160206040518083038186803b1580156103f057600080fd5b505afa158015610404573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104289190610fa1565b81526020016000848154811061044057610440610f56565b90600052602060002090600702016006015481525083838151811061046757610467610f56565b602002602001018190525050808061047e90610fba565b9150506101ab565b50919050565b60008082815481106104a0576104a0610f56565b906000526020600020906007020190508060010160009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561050057600080fd5b505afa158015610514573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105389190610fe3565b6001600160a01b0316336001600160a01b0316146105a75760405162461bcd60e51b815260206004820152602160248201527f43616e206f6e6c79206265206d6f64696669656420627920746865206f776e656044820152603960f91b60648201526084015b60405180910390fd5b6105b5600282018585610c06565b5080546001600160a01b0319163390811782556001820154600383015460068401546040516001600160a01b039390931693927f535c96772bc04bd66e3fc2bab24c455ef0b5bac77cc845b644482e89dce8611292610618926002880192611000565b60405180910390a350505050565b6003546001600160a01b0316331461069d5760405162461bcd60e51b815260206004820152603460248201527f53686f756c64206f6e6c792062652063616c6c6564207573696e67207468652060448201527314d310549959da5cdd1c9e4818dbdb9d1c9858dd60621b606482015260840161059e565b6001600160a01b03831660009081526001602052604090205460ff16156107065760405162461bcd60e51b815260206004820152601c60248201527f6d657373656e67657220616c7265616479207265676973746572656400000000604482015260640161059e565b60008390506000816001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561074657600080fd5b505afa15801561075a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077e9190610fe3565b9050856001600160a01b0316816001600160a01b0316146107f65760405162461bcd60e51b815260206004820152602c60248201527f53686f756c64206f6e6c792062652063616c6c656420627920746865206d657360448201526b39b2b733b2b91037bbb732b960a11b606482015260840161059e565b6000826001600160a01b031663c9b0cb226040518163ffffffff1660e01b815260040160206040518083038186803b15801561083157600080fd5b505afa158015610845573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108699190610fa1565b90506000836001600160a01b031663663c22696040518163ffffffff1660e01b815260040160206040518083038186803b1580156108a657600080fd5b505afa1580156108ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108de9190610fa1565b90506000846001600160a01b031663a50c54256040518163ffffffff1660e01b815260040160206040518083038186803b15801561091b57600080fd5b505afa15801561092f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109539190610fa1565b6001600160a01b03808a166000908152600160208181526040808420805460ff1916841790558354948a168452600282528320805492830181558352909120018190559091506109a46064856110b6565b1580156109b057508315155b610a1b5760405162461bcd60e51b815260206004820152603660248201527f696e76616c6964206d657373656e67657220707265636973696f6e2c2063616e6044820152753737ba103932b3b4b9ba32b91036b2b9b9b0b733b2b960511b606482015260840161059e565b60006040518060e00160405280876001600160a01b031681526020018b6001600160a01b031681526020018a8a8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509385525050506020808301899052604080840189905260608401889052608090930186905284546001818101875595835291819020845160079093020180546001600160a01b039384166001600160a01b031991821617825585830151968201805497909416961695909517909155908201518051929392610b009260028501920190610c8a565b50606082015181600301556080820151816004015560a0820151816005015560c082015181600601555050886001600160a01b0316856001600160a01b03167f65ec88813f8015e2d5de403d956ea4d6c79b88ad66a42ada93a9b4619e10fd888a8a8886604051610b7494939291906110d8565b60405180910390a350505050505050505050565b6003546001600160a01b031615610bf25760405162461bcd60e51b815260206004820152602860248201527f534c41526567697374727920616464726573732068617320616c7265616479206044820152671899595b881cd95d60c21b606482015260840161059e565b600380546001600160a01b03191633179055565b828054610c1290610f6c565b90600052602060002090601f016020900481019282610c345760008555610c7a565b82601f10610c4d5782800160ff19823516178555610c7a565b82800160010185558215610c7a579182015b82811115610c7a578235825591602001919060010190610c5f565b50610c86929150610cfe565b5090565b828054610c9690610f6c565b90600052602060002090601f016020900481019282610cb85760008555610c7a565b82601f10610cd157805160ff1916838001178555610c7a565b82800160010185558215610c7a579182015b82811115610c7a578251825591602001919060010190610ce3565b5b80821115610c865760008155600101610cff565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015610dfb57898403603f19018652825180516001600160a01b0390811686528982015116898601528781015160e089870181905281519087018190528491905b80831015610d9d578183018c01518884016101000152918b0191610d7e565b80831115610daf5785610100828a0101525b606084810151908901526080808501519089015260a0808501519089015260c09384015193880193909352505095880195601f01601f1916909301610100019291870191600101610d3b565b50919998505050505050505050565b60008083601f840112610e1c57600080fd5b50813567ffffffffffffffff811115610e3457600080fd5b602083019150836020828501011115610e4c57600080fd5b9250929050565b600080600060408486031215610e6857600080fd5b833567ffffffffffffffff811115610e7f57600080fd5b610e8b86828701610e0a565b909790965060209590950135949350505050565b6001600160a01b0381168114610eb457600080fd5b50565b60008060008060608587031215610ecd57600080fd5b8435610ed881610e9f565b93506020850135610ee881610e9f565b9250604085013567ffffffffffffffff811115610f0457600080fd5b610f1087828801610e0a565b95989497509550505050565b600060208284031215610f2e57600080fd5b8135610f3981610e9f565b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610f8057607f821691505b6020821081141561048657634e487b7160e01b600052602260045260246000fd5b600060208284031215610fb357600080fd5b5051919050565b6000600019821415610fdc57634e487b7160e01b600052601160045260246000fd5b5060010190565b600060208284031215610ff557600080fd5b8151610f3981610e9f565b60608152600080855481600182811c91508083168061102057607f831692505b602080841082141561104057634e487b7160e01b86526022600452602486fd5b606088018490526080880182801561105f57600181146110705761109b565b60ff1987168252828201975061109b565b60008d81526020902060005b878110156110955781548482015290860190840161107c565b83019850505b50508701989098525050506040909201929092529392505050565b6000826110d357634e487b7160e01b600052601260045260246000fd5b500690565b606081528360608201528385608083013760006080858301015260006080601f19601f87011683010190508360208301528260408301529594505050505056fea264697066735822122040c9b5e68c0bd2d5674906a0a8987a5382bf3677314c898b1eff0e40e725ccfb64736f6c63430008090033";

export class MessengerRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MessengerRegistry> {
    return super.deploy(overrides || {}) as Promise<MessengerRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MessengerRegistry {
    return super.attach(address) as MessengerRegistry;
  }
  connect(signer: Signer): MessengerRegistry__factory {
    return super.connect(signer) as MessengerRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessengerRegistryInterface {
    return new utils.Interface(_abi) as MessengerRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MessengerRegistry {
    return new Contract(address, _abi, signerOrProvider) as MessengerRegistry;
  }
}
