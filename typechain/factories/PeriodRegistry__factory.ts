/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PeriodRegistry,
  PeriodRegistryInterface,
} from "../PeriodRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "periodType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "periodsAdded",
        type: "uint256",
      },
    ],
    name: "PeriodInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "periodType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "periodsAdded",
        type: "uint256",
      },
    ],
    name: "PeriodModified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "_periodStarts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_periodEnds",
        type: "uint256[]",
      },
    ],
    name: "addPeriodsToPeriodType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPeriodDefinitions",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "starts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "ends",
            type: "uint256[]",
          },
        ],
        internalType: "struct PeriodRegistry.PeriodDefinition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_periodId",
        type: "uint256",
      },
    ],
    name: "getPeriodStartAndEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "_periodStarts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_periodEnds",
        type: "uint256[]",
      },
    ],
    name: "initializePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
    ],
    name: "isInitializedPeriod",
    outputs: [
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_periodId",
        type: "uint256",
      },
    ],
    name: "isValidPeriod",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "",
        type: "uint8",
      },
    ],
    name: "periodDefinitions",
    outputs: [
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_periodId",
        type: "uint256",
      },
    ],
    name: "periodHasStarted",
    outputs: [
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_periodId",
        type: "uint256",
      },
    ],
    name: "periodIsFinished",
    outputs: [
      {
        internalType: "bool",
        name: "finished",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61159b8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a163f02011610071578063a163f0201461014f578063c7b6ceb414610162578063d62e307514610175578063ddfc4fde1461018a578063f2fde38b1461019d578063ffa61235146101b057600080fd5b80635c98d157146100b9578063715018a6146100f15780637a1d83bc146100fb5780638da5cb5b1461010e5780638fdec1da14610129578063963a470b1461013c575b600080fd5b6100dc6100c7366004611210565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100f96101d8565b005b6100dc610109366004611232565b610217565b6000546040516001600160a01b0390911681526020016100e8565b6100dc610137366004611210565b6102c8565b6100f961014a36600461130d565b61030b565b6100f961015d36600461130d565b610381565b6100dc610170366004611232565b6103ea565b61017d610487565b6040516100e891906113bc565b6100dc610198366004611232565b610be4565b6100f96101ab36600461144f565b610c36565b6101c36101be366004611232565b610cd1565b604080519283526020830191909152016100e8565b6000546001600160a01b0316331461020b5760405162461bcd60e51b815260040161020290611478565b60405180910390fd5b6102156000610e04565b565b60006102238383610be4565b61026a5760405162461bcd60e51b815260206004820152601860248201527714195c9a5bd90819185d18481a5cc81b9bdd081d985b1a5960421b6044820152606401610202565b4260016000856005811115610281576102816114ad565b6005811115610292576102926114ad565b815260200190815260200160002060010183815481106102b4576102b46114c3565b906000526020600020015410905092915050565b6000600160008360058111156102e0576102e06114ad565b60058111156102f1576102f16114ad565b815260208101919091526040016000205460ff1692915050565b6000546001600160a01b031633146103355760405162461bcd60e51b815260040161020290611478565b6103426001848484610e54565b7f22453266e5e1e7468fee2b84c776e3bd5917bfd8a60abb3c0b95561bb22062da8383516040516103749291906114d9565b60405180910390a1505050565b6000546001600160a01b031633146103ab5760405162461bcd60e51b815260040161020290611478565b6103b86000848484610e54565b7f2b0f2d8c9036efbd14cb23d06c56d37fca048c5062ada3454a3ab584762d63018383516040516103749291906114d9565b60006103f68383610be4565b61043d5760405162461bcd60e51b815260206004820152601860248201527714195c9a5bd90819185d18481a5cc81b9bdd081d985b1a5960421b6044820152606401610202565b4260016000856005811115610454576104546114ad565b6005811115610465576104656114ad565b815260200190815260200160002060020183815481106102b4576102b46114c3565b60408051600680825260e0820190925260609160009190816020015b6104c9604051806060016040528060001515815260200160608152602001606081525090565b8152602001906001900390816104a35750506000805260016020908152604080516060810182527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49805460ff16151582527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4a8054845181870281018701909552808552959650919490938581019392919083018282801561058957602002820191906000526020600020905b815481526020019060010190808311610575575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156105e157602002820191906000526020600020905b8154815260200190600101908083116105cd575b505050505081525050816000815181106105fd576105fd6114c3565b602090810291909101810191909152600160008190528152604080516060810182527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f805460ff16151582527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b68879308054845181870281018701909552808552929491938583019390928301828280156106b457602002820191906000526020600020905b8154815260200190600101908083116106a0575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561070c57602002820191906000526020600020905b8154815260200190600101908083116106f8575b50505050508152505081600181518110610728576107286114c3565b602090810291909101810191909152600260005260018152604080516060810182527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f805460ff16151582527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec33108054845181870281018701909552808552929491938583019390928301828280156107df57602002820191906000526020600020905b8154815260200190600101908083116107cb575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561083757602002820191906000526020600020905b815481526020019060010190808311610823575b50505050508152505081600281518110610853576108536114c3565b602090810291909101810191909152600360005260018152604080516060810182527f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b805460ff16151582527f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60c80548451818702810187019095528085529294919385830193909283018282801561090a57602002820191906000526020600020905b8154815260200190600101908083116108f6575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561096257602002820191906000526020600020905b81548152602001906001019080831161094e575b5050505050815250508160038151811061097e5761097e6114c3565b602090810291909101810191909152600460005260018152604080516060810182527fedc95719e9a3b28dd8e80877cb5880a9be7de1a13fc8b05e7999683b6b567643805460ff16151582527fedc95719e9a3b28dd8e80877cb5880a9be7de1a13fc8b05e7999683b6b567644805484518187028101870190955280855292949193858301939092830182828015610a3557602002820191906000526020600020905b815481526020019060010190808311610a21575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610a8d57602002820191906000526020600020905b815481526020019060010190808311610a79575b50505050508152505081600481518110610aa957610aa96114c3565b602090810291909101810191909152600560005260018152604080516060810182527fe2689cd4a84e23ad2f564004f1c9013e9589d260bde6380aba3ca7e09e4df40c805460ff16151582527fe2689cd4a84e23ad2f564004f1c9013e9589d260bde6380aba3ca7e09e4df40d805484518187028101870190955280855292949193858301939092830182828015610b6057602002820191906000526020600020905b815481526020019060010190808311610b4c575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610bb857602002820191906000526020600020905b815481526020019060010190808311610ba4575b50505050508152505081600581518110610bd457610bd46114c3565b6020908102919091010152919050565b6000816001806000866005811115610bfe57610bfe6114ad565b6005811115610c0f57610c0f6114ad565b8152602081019190915260400160002060010154610c2d919061151b565b10159392505050565b6000546001600160a01b03163314610c605760405162461bcd60e51b815260040161020290611478565b6001600160a01b038116610cc55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610202565b610cce81610e04565b50565b60008060016000856005811115610cea57610cea6114ad565b6005811115610cfb57610cfb6114ad565b81526020810191909152604001600020600101548310610d515760405162461bcd60e51b8152602060048201526011602482015270125b9d985b1a59081c195c9a5bd9081a59607a1b6044820152606401610202565b60016000856005811115610d6757610d676114ad565b6005811115610d7857610d786114ad565b81526020019081526020016000206001018381548110610d9a57610d9a6114c3565b9060005260206000200154915060016000856005811115610dbd57610dbd6114ad565b6005811115610dce57610dce6114ad565b81526020019081526020016000206002018381548110610df057610df06114c3565b906000526020600020015490509250929050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000825111610ea55760405162461bcd60e51b815260206004820152601860248201527f506572696f64206c656e6774682063616e2774206265203000000000000000006044820152606401610202565b8051825114610f115760405162461bcd60e51b815260206004820152603260248201527f506572696f64206c656e67746820696e20737461727420616e6420656e6420616044820152710e4e4c2f2e640e6d0deead8c840dac2e8c6d60731b6064820152608401610202565b600060016000856005811115610f2957610f296114ad565b6005811115610f3a57610f3a6114ad565b815260200190815260200160002090508415610fa657805460ff16610fa15760405162461bcd60e51b815260206004820152601e60248201527f506572696f6420776173206e6f7420696e697469616c697a65642079657400006044820152606401610202565b610ff8565b805460ff1615610ff85760405162461bcd60e51b815260206004820152601f60248201527f506572696f64207479706520616c726561647920696e697469616c697a6564006044820152606401610202565b60005b83518110156111ea57828181518110611016576110166114c3565b6020026020010151848281518110611030576110306114c3565b6020026020010151106110855760405162461bcd60e51b815260206004820152601a60248201527f53746172742073686f756c64206265206265666f726520656e640000000000006044820152606401610202565b60018451611093919061151b565b81101561116b578281815181106110ac576110ac6114c3565b6020026020010151848260016110c29190611532565b815181106110d2576110d26114c3565b60200260200101516110e4919061151b565b60011461116b5760405162461bcd60e51b815260206004820152604960248201527f5374617274206f66206120706572696f642073686f756c64206265203120736560448201527f636f6e642061667465722074686520656e64206f66207468652070726576696f6064820152681d5cc81c195c9a5bd960ba1b608482015260a401610202565b81600101848281518110611181576111816114c3565b60209081029190910181015182546001810184556000938452919092200155825160028301908490839081106111b9576111b96114c3565b60209081029190910181015182546001810184556000938452919092200155806111e28161154a565b915050610ffb565b50805460ff1916600117905550505050565b80356006811061120b57600080fd5b919050565b60006020828403121561122257600080fd5b61122b826111fc565b9392505050565b6000806040838503121561124557600080fd5b61124e836111fc565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261128357600080fd5b8135602067ffffffffffffffff808311156112a0576112a061125c565b8260051b604051601f19603f830116810181811084821117156112c5576112c561125c565b6040529384528581018301938381019250878511156112e357600080fd5b83870191505b84821015611302578135835291830191908301906112e9565b979650505050505050565b60008060006060848603121561132257600080fd5b61132b846111fc565b9250602084013567ffffffffffffffff8082111561134857600080fd5b61135487838801611272565b9350604086013591508082111561136a57600080fd5b5061137786828701611272565b9150509250925092565b600081518084526020808501945080840160005b838110156113b157815187529582019590820190600101611395565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b8381101561144157603f198984030185528151606081511515855288820151818a87015261141382870182611381565b9150508782015191508481038886015261142d8183611381565b9689019694505050908601906001016113e3565b509098975050505050505050565b60006020828403121561146157600080fd5b81356001600160a01b038116811461122b57600080fd5b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60408101600684106114fb57634e487b7160e01b600052602160045260246000fd5b9281526020015290565b634e487b7160e01b600052601160045260246000fd5b60008282101561152d5761152d611505565b500390565b6000821982111561154557611545611505565b500190565b600060001982141561155e5761155e611505565b506001019056fea264697066735822122083911d2ff14672b068ade5ad1cb674d6dd9d68b8a02902ede9525f50b355c1d464736f6c63430008090033";

export class PeriodRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PeriodRegistry> {
    return super.deploy(overrides || {}) as Promise<PeriodRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PeriodRegistry {
    return super.attach(address) as PeriodRegistry;
  }
  connect(signer: Signer): PeriodRegistry__factory {
    return super.connect(signer) as PeriodRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeriodRegistryInterface {
    return new utils.Interface(_abi) as PeriodRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PeriodRegistry {
    return new Contract(address, _abi, signerOrProvider) as PeriodRegistry;
  }
}
