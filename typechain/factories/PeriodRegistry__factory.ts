/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PeriodRegistry,
  PeriodRegistryInterface,
} from "../PeriodRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "periodType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "periodsAdded",
        type: "uint256",
      },
    ],
    name: "PeriodInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "periodType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "periodsAdded",
        type: "uint256",
      },
    ],
    name: "PeriodModified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "_periodStarts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_periodEnds",
        type: "uint256[]",
      },
    ],
    name: "addPeriodsToPeriodType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPeriodDefinitions",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256[]",
            name: "starts",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "ends",
            type: "uint256[]",
          },
        ],
        internalType: "struct PeriodRegistry.PeriodDefinition[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_periodId",
        type: "uint256",
      },
    ],
    name: "getPeriodStartAndEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256[]",
        name: "_periodStarts",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_periodEnds",
        type: "uint256[]",
      },
    ],
    name: "initializePeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
    ],
    name: "isInitializedPeriod",
    outputs: [
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_periodId",
        type: "uint256",
      },
    ],
    name: "isValidPeriod",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "",
        type: "uint8",
      },
    ],
    name: "periodDefinitions",
    outputs: [
      {
        internalType: "bool",
        name: "initialized",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_periodId",
        type: "uint256",
      },
    ],
    name: "periodHasStarted",
    outputs: [
      {
        internalType: "bool",
        name: "started",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "_periodType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_periodId",
        type: "uint256",
      },
    ],
    name: "periodIsFinished",
    outputs: [
      {
        internalType: "bool",
        name: "finished",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260006100176001600160e01b0361006616565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35061006a565b3390565b6115fd806100796000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063a163f02011610071578063a163f0201461013a578063c7b6ceb41461014d578063d62e307514610160578063ddfc4fde14610175578063f2fde38b14610188578063ffa612351461019b576100b4565b80635c98d157146100b9578063715018a6146100e25780637a1d83bc146100ec5780638da5cb5b146100ff5780638fdec1da14610114578063963a470b14610127575b600080fd5b6100cc6100c7366004611173565b6101bc565b6040516100d9919061130a565b60405180910390f35b6100ea6101d1565b005b6100cc6100fa366004611202565b610263565b6101076102d7565b6040516100d99190611267565b6100cc610122366004611173565b6102e6565b6100ea61013536600461118f565b61031d565b6100ea61014836600461118f565b610542565b6100cc61015b366004611202565b61074c565b6101686107ac565b6040516100d9919061127b565b6100cc610183366004611202565b610ec6565b6100ea610196366004611145565b610f11565b6101ae6101a9366004611202565b610fd1565b6040516100d99291906115a9565b60016020526000908152604090205460ff1681565b6101d9611063565b6001600160a01b03166101ea6102d7565b6001600160a01b0316146102195760405162461bcd60e51b8152600401610210906114cf565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b600061026f8383610ec6565b61028b5760405162461bcd60e51b815260040161021090611572565b426001600085600581111561029c57fe5b60058111156102a757fe5b815260200190815260200160002060010183815481106102c357fe5b906000526020600020015410905092915050565b6000546001600160a01b031690565b6000600160008360058111156102f857fe5b600581111561030357fe5b815260208101919091526040016000205460ff1692915050565b610325611063565b6001600160a01b03166103366102d7565b6001600160a01b03161461035c5760405162461bcd60e51b8152600401610210906114cf565b600082511161037d5760405162461bcd60e51b815260040161021090611504565b60006001600085600581111561038f57fe5b600581111561039a57fe5b81526020810191909152604001600020805490915060ff166103ce5760405162461bcd60e51b815260040161021090611498565b60005b8351811015610501578281815181106103e657fe5b60200260200101518482815181106103fa57fe5b60200260200101511061041f5760405162461bcd60e51b81526004016102109061139c565b835161043290600163ffffffff61106716565b8110156104945761047583828151811061044857fe5b602002602001015185836001018151811061045f57fe5b602002602001015161106790919063ffffffff16565b6001146104945760405162461bcd60e51b81526004016102109061132d565b816001018482815181106104a457fe5b60209081029190910181015182546001810184556000938452919092200155825160028301908490839081106104d657fe5b60209081029190910181015182546001818101855560009485529290932090920191909155016103d1565b507f22453266e5e1e7468fee2b84c776e3bd5917bfd8a60abb3c0b95561bb22062da848451604051610534929190611315565b60405180910390a150505050565b61054a611063565b6001600160a01b031661055b6102d7565b6001600160a01b0316146105815760405162461bcd60e51b8152600401610210906114cf565b60006001600085600581111561059357fe5b600581111561059e57fe5b81526020810191909152604001600020805490915060ff16156105d35760405162461bcd60e51b81526004016102109061153b565b81518351146105f45760405162461bcd60e51b815260040161021090611419565b60008351116106155760405162461bcd60e51b815260040161021090611504565b60005b835181101561070d5782818151811061062d57fe5b602002602001015184828151811061064157fe5b6020026020010151106106665760405162461bcd60e51b81526004016102109061139c565b60018451038110156106a05761068183828151811061044857fe5b6001146106a05760405162461bcd60e51b81526004016102109061132d565b816001018482815181106106b057fe5b60209081029190910181015182546001810184556000938452919092200155825160028301908490839081106106e257fe5b6020908102919091018101518254600181810185556000948552929093209092019190915501610618565b50805460ff1916600117815582516040517f2b0f2d8c9036efbd14cb23d06c56d37fca048c5062ada3454a3ab584762d63019161053491879190611315565b60006107588383610ec6565b6107745760405162461bcd60e51b815260040161021090611572565b426001600085600581111561078557fe5b600581111561079057fe5b815260200190815260200160002060020183815481106102c357fe5b60408051600680825260e08201909252606091829190816020015b6107cf61108f565b8152602001906001900390816107c75750506000805260016020908152604080516060810182527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb49805460ff16151582527fa6eef7e35abe7026729641147f7915573c7e97b47efa546f5f6e3230263bcb4a8054845181870281018701909552808552959650919490938581019392919083018282801561088f57602002820191906000526020600020905b81548152602001906001019080831161087b575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156108e757602002820191906000526020600020905b8154815260200190600101908083116108d3575b505050505081525050816000815181106108fd57fe5b602090810291909101810191909152600160008190528152604080516060810182527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f805460ff16151582527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b68879308054845181870281018701909552808552929491938583019390928301828280156109b457602002820191906000526020600020905b8154815260200190600101908083116109a0575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610a0c57602002820191906000526020600020905b8154815260200190600101908083116109f8575b50505050508152505081600181518110610a2257fe5b602090810291909101810191909152600260005260018152604080516060810182527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec330f805460ff16151582527fd9d16d34ffb15ba3a3d852f0d403e2ce1d691fb54de27ac87cd2f993f3ec3310805484518187028101870190955280855292949193858301939092830182828015610ad957602002820191906000526020600020905b815481526020019060010190808311610ac5575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610b3157602002820191906000526020600020905b815481526020019060010190808311610b1d575b50505050508152505081600281518110610b4757fe5b602090810291909101810191909152600360005260018152604080516060810182527f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60b805460ff16151582527f7dfe757ecd65cbd7922a9c0161e935dd7fdbcc0e999689c7d31633896b1fc60c805484518187028101870190955280855292949193858301939092830182828015610bfe57602002820191906000526020600020905b815481526020019060010190808311610bea575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610c5657602002820191906000526020600020905b815481526020019060010190808311610c42575b50505050508152505081600381518110610c6c57fe5b602090810291909101810191909152600460005260018152604080516060810182527fedc95719e9a3b28dd8e80877cb5880a9be7de1a13fc8b05e7999683b6b567643805460ff16151582527fedc95719e9a3b28dd8e80877cb5880a9be7de1a13fc8b05e7999683b6b567644805484518187028101870190955280855292949193858301939092830182828015610d2357602002820191906000526020600020905b815481526020019060010190808311610d0f575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610d7b57602002820191906000526020600020905b815481526020019060010190808311610d67575b50505050508152505081600481518110610d9157fe5b602090810291909101810191909152600560005260018152604080516060810182527fe2689cd4a84e23ad2f564004f1c9013e9589d260bde6380aba3ca7e09e4df40c805460ff16151582527fe2689cd4a84e23ad2f564004f1c9013e9589d260bde6380aba3ca7e09e4df40d805484518187028101870190955280855292949193858301939092830182828015610e4857602002820191906000526020600020905b815481526020019060010190808311610e34575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015610ea057602002820191906000526020600020905b815481526020019060010190808311610e8c575b50505050508152505081600581518110610eb657fe5b6020908102919091010152905090565b600081610f086001806000876005811115610edd57fe5b6005811115610ee857fe5b81526020810191909152604001600020600101549063ffffffff61106716565b10159392505050565b610f19611063565b6001600160a01b0316610f2a6102d7565b6001600160a01b031614610f505760405162461bcd60e51b8152600401610210906114cf565b6001600160a01b038116610f765760405162461bcd60e51b8152600401610210906113d3565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008060016000856005811115610fe457fe5b6005811115610fef57fe5b8152602001908152602001600020600101838154811061100b57fe5b906000526020600020015491506001600085600581111561102857fe5b600581111561103357fe5b8152602001908152602001600020600201838154811061104f57fe5b906000526020600020015490509250929050565b3390565b6000828211156110895760405162461bcd60e51b815260040161021090611461565b50900390565b604051806060016040528060001515815260200160608152602001606081525090565b600082601f8301126110c2578081fd5b813567ffffffffffffffff808211156110d9578283fd5b6020808302604051828282010181811085821117156110f6578687fd5b60405284815294508185019250858201818701830188101561111757600080fd5b600091505b8482101561113a57803584529282019260019190910190820161111c565b505050505092915050565b600060208284031215611156578081fd5b81356001600160a01b038116811461116c578182fd5b9392505050565b600060208284031215611184578081fd5b813561116c816115b7565b6000806000606084860312156111a3578182fd5b83356111ae816115b7565b9250602084013567ffffffffffffffff808211156111ca578384fd5b6111d6878388016110b2565b935060408601359150808211156111eb578283fd5b506111f8868287016110b2565b9150509250925092565b60008060408385031215611214578182fd5b823561121f816115b7565b946020939093013593505050565b6000815180845260208085019450808401835b8381101561125c57815187529582019590820190600101611240565b509495945050505050565b6001600160a01b0391909116815260200190565b60208082528251828201819052600091906040908185019080840286018301878501865b838110156112fc57603f198984030185528151606081511515855288820151818a8701526112cf8287018261122d565b8984015192508681038a8801526112e6818461122d565b988b01989650505092880192505060010161129f565b509098975050505050505050565b901515815260200190565b604081016006841061132357fe5b9281526020015290565b60208082526049908201527f5374617274206f66206120706572696f642073686f756c64206265203120736560408201527f636f6e642061667465722074686520656e64206f66207468652070726576696f6060820152681d5cc81c195c9a5bd960ba1b608082015260a00190565b6020808252601a908201527f53746172742073686f756c64206265206265666f726520656e64000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526028908201527f506572696f6420747970652073746172747320616e6420656e64732073686f756040820152670d8c840dac2e8c6d60c31b606082015260800190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252601e908201527f506572696f6420776173206e6f7420696e697469616c697a6564207965740000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526018908201527f506572696f64206c656e6774682063616e277420626520300000000000000000604082015260600190565b6020808252601f908201527f506572696f64207479706520616c726561647920696e697469616c697a656400604082015260600190565b60208082526018908201527f506572696f642064617461206973206e6f742076616c69640000000000000000604082015260600190565b918252602082015260400190565b600681106115c457600080fd5b5056fea26469706673582212206bc605d03672f517d68b85a7f0b34c021db917b03ab1376e09d6f8ee3dbc8da364736f6c63430006060033";

export class PeriodRegistry__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PeriodRegistry> {
    return super.deploy(overrides || {}) as Promise<PeriodRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PeriodRegistry {
    return super.attach(address) as PeriodRegistry;
  }
  connect(signer: Signer): PeriodRegistry__factory {
    return super.connect(signer) as PeriodRegistry__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PeriodRegistryInterface {
    return new utils.Interface(_abi) as PeriodRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PeriodRegistry {
    return new Contract(address, _abi, signerOrProvider) as PeriodRegistry;
  }
}
