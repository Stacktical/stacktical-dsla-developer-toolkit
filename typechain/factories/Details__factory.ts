/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Details, DetailsInterface } from "../Details";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_slaAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getDTokensDetails",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dTokenAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "dTokenSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "dTokenName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType: "struct Details.DtokenDetails[]",
        name: "dpTokens",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "dTokenAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "dTokenSymbol",
            type: "string",
          },
          {
            internalType: "string",
            name: "dTokenName",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "balance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "allowance",
            type: "uint256",
          },
        ],
        internalType: "struct Details.DtokenDetails[]",
        name: "duTokens",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_slaAddress",
        type: "address",
      },
    ],
    name: "getSLADetailsArrays",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sli",
            type: "uint256",
          },
          {
            internalType: "enum SLA.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SLA.PeriodSLI[]",
        name: "periodSLIs",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalStake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "usersPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "providersPool",
            type: "uint256",
          },
        ],
        internalType: "struct Details.TokenStake[]",
        name: "tokensStake",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_slaAddress",
        type: "address",
      },
    ],
    name: "getSLADynamicDetails",
    outputs: [
      {
        internalType: "uint256",
        name: "stakersCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextVerifiablePeriod",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "leverage",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_slaAddress",
        type: "address",
      },
      {
        internalType: "contract SLORegistry",
        name: "_sloRegistry",
        type: "address",
      },
    ],
    name: "getSLAStaticDetails",
    outputs: [
      {
        internalType: "address",
        name: "slaOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "messengerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sloValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "creationBlockNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slaId",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "initialPeriodId",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "finalPeriodId",
        type: "uint128",
      },
      {
        internalType: "bool",
        name: "whiteListed",
        type: "bool",
      },
      {
        internalType: "enum IPeriodRegistry.PeriodType",
        name: "periodType",
        type: "uint8",
      },
      {
        internalType: "enum SLORegistry.SLOType",
        name: "sloType",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c5c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806330f1bef014610051578063431b7770146100845780637922f334146100bc578063afa029e4146100dd575b600080fd5b61006461005f366004611693565b6100fe565b60405161007b9b9a9998979695949392919061174e565b60405180910390f35b6100976100923660046117e0565b6105cf565b60408051938452602084019290925267ffffffffffffffff169082015260600161007b565b6100cf6100ca366004611693565b610738565b60405161007b9291906118c4565b6100f06100eb3660046117e0565b610fb4565b60405161007b9291906118f2565b600080600080600080600080600080606060008d9050806001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561014d57600080fd5b505afa158015610161573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018591906119b6565b9b50806001600160a01b031663a224ee9c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c057600080fd5b505afa1580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f891906119b6565b9a50806001600160a01b03166318e454276040518163ffffffff1660e01b815260040160206040518083038186803b15801561023357600080fd5b505afa158015610247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026b91906119d3565b9450806001600160a01b03166346e0fbae6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a657600080fd5b505afa1580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de9190611a02565b93508c6001600160a01b031663a7b72ac58f6040518263ffffffff1660e01b815260040161031b91906001600160a01b0391909116815260200190565b604080518083038186803b15801561033257600080fd5b505afa158015610346573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036a9190611a1f565b809450819b505050806001600160a01b0316631bf309296040518163ffffffff1660e01b815260040160206040518083038186803b1580156103ab57600080fd5b505afa1580156103bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e39190611a44565b9850806001600160a01b031663f2db10fe6040518163ffffffff1660e01b815260040160206040518083038186803b15801561041e57600080fd5b505afa158015610432573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104569190611a5d565b6001600160801b03169750806001600160a01b031663c623674f6040518163ffffffff1660e01b815260040160006040518083038186803b15801561049a57600080fd5b505afa1580156104ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526104d69190810190611a9c565b9150806001600160a01b0316632526743a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561051157600080fd5b505afa158015610525573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105499190611a5d565b9650806001600160a01b0316633385d3346040518163ffffffff1660e01b815260040160206040518083038186803b15801561058457600080fd5b505afa158015610598573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105bc9190611a5d565b9550509295989b509295989b9093969950565b600080600080849050806001600160a01b0316639fabeb006040518163ffffffff1660e01b815260040160206040518083038186803b15801561061157600080fd5b505afa158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190611a44565b9350806001600160a01b031663b1659bad6040518163ffffffff1660e01b815260040160206040518083038186803b15801561068457600080fd5b505afa158015610698573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bc9190611a44565b9250806001600160a01b0316632c86d98e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106f757600080fd5b505afa15801561070b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072f9190611b49565b93959294505050565b6060806000806001600160a01b0316846001600160a01b03161415905060008590506000816001600160a01b031663b7bc347e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561079557600080fd5b505afa1580156107a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cd9190611a44565b90508067ffffffffffffffff8111156107e8576107e8611a86565b60405190808252806020026020018201604052801561082157816020015b61080e6115fb565b8152602001906001900390816108065790505b5094508067ffffffffffffffff81111561083d5761083d611a86565b60405190808252806020026020018201604052801561087657816020015b6108636115fb565b81526020019060019003908161085b5790505b50935060005b81811015610fa957604051632f2f971360e11b8152600481018290526000906001600160a01b03851690635e5f2e269060240160206040518083038186803b1580156108c757600080fd5b505afa1580156108db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ff91906119b6565b6040516327d9323f60e11b81526001600160a01b038083166004830152919250600091861690634fb2647e9060240160206040518083038186803b15801561094657600080fd5b505afa15801561095a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097e91906119b6565b90506040518060e00160405280836001600160a01b03168152602001826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109d357600080fd5b505afa1580156109e7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0b9190611a44565b8152602001826001600160a01b03168152602001826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610a5857600080fd5b505afa158015610a6c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610a949190810190611a9c565b8152602001826001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610ad257600080fd5b505afa158015610ae6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b0e9190810190611a9c565b815260200187610b1f576000610b98565b6040516370a0823160e01b81526001600160a01b038c811660048301528416906370a082319060240160206040518083038186803b158015610b6057600080fd5b505afa158015610b74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b989190611a44565b815260200187610ba9576000610c2a565b604051636eb1769f60e11b81526001600160a01b038c811660048301528d8116602483015284169063dd62ed3e9060440160206040518083038186803b158015610bf257600080fd5b505afa158015610c06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2a9190611a44565b815250888481518110610c3f57610c3f611b73565b602090810291909101015260405163270648fb60e11b81526001600160a01b03838116600483015260009190871690634e0c91f69060240160206040518083038186803b158015610c8f57600080fd5b505afa158015610ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc791906119b6565b90506040518060e00160405280846001600160a01b03168152602001826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d1c57600080fd5b505afa158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d549190611a44565b8152602001826001600160a01b03168152602001826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610da157600080fd5b505afa158015610db5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ddd9190810190611a9c565b8152602001826001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610e1b57600080fd5b505afa158015610e2f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e579190810190611a9c565b815260200188610e68576000610ee1565b6040516370a0823160e01b81526001600160a01b038d811660048301528416906370a082319060240160206040518083038186803b158015610ea957600080fd5b505afa158015610ebd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee19190611a44565b815260200188610ef2576000610f73565b604051636eb1769f60e11b81526001600160a01b038d811660048301528e8116602483015284169063dd62ed3e9060440160206040518083038186803b158015610f3b57600080fd5b505afa158015610f4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f739190611a44565b815250888581518110610f8857610f88611b73565b60200260200101819052505050508080610fa190611b9f565b91505061087c565b505050509250929050565b60608060008390506000816001600160a01b0316632526743a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ff757600080fd5b505afa15801561100b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061102f9190611a5d565b6001600160801b031690506000826001600160a01b0316633385d3346040518163ffffffff1660e01b815260040160206040518083038186803b15801561107557600080fd5b505afa158015611089573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ad9190611a5d565b6001600160801b0316905060006110c48383611bba565b6110cf906001611bd1565b90508067ffffffffffffffff8111156110ea576110ea611a86565b60405190808252806020026020018201604052801561112357816020015b61111061164a565b8152602001906001900390816111085790505b50955060005b8181101561122857600061113d8286611bd1565b90506000806000886001600160a01b0316634190edde856040518263ffffffff1660e01b815260040161117291815260200190565b60606040518083038186803b15801561118a57600080fd5b505afa15801561119e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c29190611be9565b92509250925060405180606001604052808481526020018381526020018260028111156111f1576111f16116cc565b8152508b868151811061120657611206611b73565b602002602001018190525050505050808061122090611b9f565b915050611129565b506000846001600160a01b031663b7bc347e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561126457600080fd5b505afa158015611278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129c9190611a44565b90508067ffffffffffffffff8111156112b7576112b7611a86565b60405190808252806020026020018201604052801561131c57816020015b611309604051806080016040528060006001600160a01b031681526020016000815260200160008152602001600081525090565b8152602001906001900390816112d55790505b50955060005b818110156115f057604051632f2f971360e11b8152600481018290526000906001600160a01b03881690635e5f2e269060240160206040518083038186803b15801561136d57600080fd5b505afa158015611381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a591906119b6565b604080516080810182526001600160a01b0380841680835292516304a1234160e31b81526004810193909352929350916020830191908a16906325091a089060240160206040518083038186803b1580156113ff57600080fd5b505afa158015611413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114379190611a44565b60405163484fbf2b60e01b81526001600160a01b0385811660048301528b169063484fbf2b9060240160206040518083038186803b15801561147857600080fd5b505afa15801561148c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b09190611a44565b6114ba9190611bd1565b815260405163484fbf2b60e01b81526001600160a01b0384811660048301526020909201918a169063484fbf2b9060240160206040518083038186803b15801561150357600080fd5b505afa158015611517573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061153b9190611a44565b81526040516304a1234160e31b81526001600160a01b0384811660048301526020909201918a16906325091a089060240160206040518083038186803b15801561158457600080fd5b505afa158015611598573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bc9190611a44565b8152508883815181106115d1576115d1611b73565b60200260200101819052505080806115e890611b9f565b915050611322565b505050505050915091565b6040518060e0016040528060006001600160a01b031681526020016000815260200160006001600160a01b03168152602001606081526020016060815260200160008152602001600081525090565b6040518060600160405280600081526020016000815260200160006002811115611676576116766116cc565b905290565b6001600160a01b038116811461169057600080fd5b50565b600080604083850312156116a657600080fd5b82356116b18161167b565b915060208301356116c18161167b565b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b60068110611690576116906116cc565b60005b8381101561170d5781810151838201526020016116f5565b8381111561171c576000848401525b50505050565b6000815180845261173a8160208601602086016116f2565b601f01601f19169290920160200192915050565b6001600160a01b038c811682528b166020820152604081018a905260608101899052608081018890526001600160801b0387811660a0830152861660c082015284151560e082015260006101606117a4866116e2565b856101008401526117b4856116e2565b84610120840152806101408401526117ce81840185611722565b9e9d5050505050505050505050505050565b6000602082840312156117f257600080fd5b81356117fd8161167b565b9392505050565b600081518084526020808501808196508360051b8101915082860160005b858110156118b7578284038952815180516001600160a01b03908116865286820151878701526040808301519091169086015260608082015160e0828801819052919061187183890182611722565b925050506080808301518783038289015261188c8382611722565b60a085810151908a015260c09485015194909801939093525050509784019790840190600101611822565b5091979650505050505050565b6040815260006118d76040830185611804565b82810360208401526118e98185611804565b95945050505050565b6040808252835182820181905260009190606090818501906020808901865b8381101561194e5781518051865283810151848701528701516003811061193a5761193a6116cc565b858801529385019390820190600101611911565b5050868303818801528751808452888201938201925060005b818110156119a757845180516001600160a01b03168552838101518486015287810151888601528601518685015293820193608090930192600101611967565b50919998505050505050505050565b6000602082840312156119c857600080fd5b81516117fd8161167b565b6000602082840312156119e557600080fd5b815180151581146117fd57600080fd5b6006811061169057600080fd5b600060208284031215611a1457600080fd5b81516117fd816119f5565b60008060408385031215611a3257600080fd5b8251915060208301516116c1816119f5565b600060208284031215611a5657600080fd5b5051919050565b600060208284031215611a6f57600080fd5b81516001600160801b03811681146117fd57600080fd5b634e487b7160e01b600052604160045260246000fd5b600060208284031215611aae57600080fd5b815167ffffffffffffffff80821115611ac657600080fd5b818401915084601f830112611ada57600080fd5b815181811115611aec57611aec611a86565b604051601f8201601f19908116603f01168101908382118183101715611b1457611b14611a86565b81604052828152876020848701011115611b2d57600080fd5b611b3e8360208301602088016116f2565b979650505050505050565b600060208284031215611b5b57600080fd5b815167ffffffffffffffff811681146117fd57600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611bb357611bb3611b89565b5060010190565b600082821015611bcc57611bcc611b89565b500390565b60008219821115611be457611be4611b89565b500190565b600080600060608486031215611bfe57600080fd5b8351925060208401519150604084015160038110611c1b57600080fd5b80915050925092509256fea26469706673582212206b6ef98671e038b487bfb3ee8d9088716c27cb7d43768f73a0fab1cc684e809c64736f6c63430008090033";

export class Details__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Details> {
    return super.deploy(overrides || {}) as Promise<Details>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Details {
    return super.attach(address) as Details;
  }
  connect(signer: Signer): Details__factory {
    return super.connect(signer) as Details__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DetailsInterface {
    return new utils.Interface(_abi) as DetailsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Details {
    return new Contract(address, _abi, signerOrProvider) as Details;
  }
}
