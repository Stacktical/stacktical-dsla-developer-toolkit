await ethers.provider.send('evm_mine')
let fact =require('./typechain/factories/NetworkAnalytics__factory')
let networkAnalyticsArtifact = await hre.deployments.get('NetworkAnalytics')
let naFactory = fact.NetworkAnalytics__factory
let networkAnalytics = await naFactory.connect(networkAnalyticsArtifact.address,signer)
hre.ethers
await networkAnalytics.getNetworkNames()
networkAnalytics.getNetworkNames()
networkAnalytics.getNetworkNames
let networkAnalytics = await naFactory(networkAnalyticsArtifact.address,signer)
networkAnalyticsArtifact.address
let networkAnalytics = await naFactory(networkAnalyticsArtifact.address,signer)
let signer = await ethers.getSigner((await hre.getNamedAccounts()).deployer)
oracle
oracleEvents
let oracleEvents = await oracle.queryFilter(oracleFilters)
let oracleFilters = oracle.filters.OracleRequest()
oracle = await OracleFactory.Oracle__factory.connect(oracleArtifact.address,signer)
oracle = await OracleFactory.connect(oracleArtifact.address,signer)
let oracle = await OracleFactory
const OracleFactory = require('./typechain/factories/Oracle__factory')
let signer = await ethers.getSigner((await hre.getNamedAccounts()).deployer)
let signer = await ethers.getSigner((await hre.getNamedAccounts()).address)
let signer = await ethers.getSigner((await hre.getNamedAccounts().address)
let signer = await ethers.getSigner((await hre.getNamedAccounts()).address)
const oracleArtifact = await hre.deployments.get('Oracle')
await ethers.provider.send('evm_mine')
await ethers.provider.send
await ethers.provider.send('evm_mine')
await ethers.provider.send('evm_min')
await ethers.provider.send()
await preCoordinator.queryFilter({topic:'NewServiceAgreement'})
preCoordinator.queryFilter({topic:'NewServiceAgreement'})
preCoordinator.queryFilter({topic:'NewServiceAgreement'}))
await preCoordinator.queryFilter({topic:'NewServiceAgreement'}))
preCoordinator.queryFilter({topic:'NewServiceAgreement'})
preCoordinator.queryFilter({topic:'NewServiceAgreement'}))
preCoordinator.queryFilter()
preCoordinator.queryFilter
preCoordinator.queryFilter√ß
await preCoordinator.getServiceAgreement('hola')
await preCoordinator.getServiceAgreement()
preCoordinator
let preCoordinator = await ethers.getContract('PreCoordinator')
await networkAnalytics.getNetworkNames()
networkAnalytics.getNetworkNames()
networkAnalytics = await ethers.getContract('NetworkAnalytics')
ethers.getContract('NetworkAnalytics')
ethers.getContract('NetworkAnalytics'))
ethers.getContract()
ethers.getContract
networkAnalytics = await NetworkAnalytics_factory
let networkAnalytics = await hre.deployments.get('NetworkAnalytics')
await hre.ethers.provider.send('debug_traceTransaction',['0x161781d93bf84ca93bd9907b4ef25c6282763d00a808d5573e5a62f14f310aa9'])
hre.ethers.provider.send('debug_traceTransaction','0x161781d93bf84ca93bd9907b4ef25c6282763d00a808d5573e5a62f14f310aa9')
await stakeRegistry.slaRegistry()
stakeRegistry.slaRegistry()
let stakeRegistry = await StakeRegistry__factory.connect(stakeRegistryArtifact.address,await ethers.getSigner(deployer))
const stakeRegistryArtifact = await hre.deployments.get('StakeRegistry')
const stakeRegistryArtifact = await get('StakeRegistry')
const {StakeRegistry__factory}= require('./typechain/')
const {StakeRegistry__factory}= require('./typechain/)
const {deployer} = await hre.getNamedAccounts()
await oracle.setFulfillmentPermission('0xe7A305a58f6f36D11500346cd0549EBb2c0E35eA',true)
await ethers.getSigners()
await oracle.setFulfillmentPermission('0xe7A305a58f6f36D11500346cd0549EBb2c0E35eA',true)
await oracle.getAuthorizationStatus('0xe7A305a58f6f36D11500346cd0549EBb2c0E35eA')
oracle.getAuthorizationStatus('0xe7A305a58f6f36D11500346cd0549EBb2c0E35eA')
let oracle = await ethers.getContract('Oracle')
const oracle1 = await ethers.getContract('Oracle')
oracle
const oracle = ethers.getContract('Oracle')
network
config
ethers
