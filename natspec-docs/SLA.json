{
  "details": "SLA is a service level agreement contract used for service downtime compensation",
  "methods": {
    "constructor": {
      "params": {
        "_owner": "1. -",
        "_ipfsHash": "3. -",
        "_messengerAddress": "3. -",
        "_finalPeriodId": "4. -",
        "_initialPeriodId": "4. -",
        "_periodType": "5. -",
        "_whitelisted": "8. -",
        "_extraData": "9. -",
        "_slaID": "10. -"
      }
    },
    "owner()": { "details": "Returns the address of the current owner." },
    "registerSLI(uint256,uint256)": {
      "details": "external function to register SLI's and check them against the SLORegistry",
      "params": {
        "_sli": "1. the value of the SLI to check",
        "_periodId": "2. the id of the given period"
      }
    },
    "renounceOwnership()": {
      "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
    },
    "transferOwnership(address)": {
      "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
    }
  },
  "title": "SLA"
}
