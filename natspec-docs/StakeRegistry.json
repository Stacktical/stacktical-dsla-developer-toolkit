{
  "details": "StakeRegistry is a contract to register the staking activity of the platform, along with controlling certain admin privileged parameters",
  "methods": {
    "constructor": { "params": { "_dslaTokenAddress": "1. DSLA Token" } },
    "getActivePool(address)": {
      "details": "returns the active pools owned by a user.",
      "params": { "_slaOwner": "1. owner of the active pool" },
      "returns": {
        "_0": "ActivePool[], array of structs: {SLAAddress,stake,assetName}"
      }
    },
    "owner()": { "details": "Returns the address of the current owner." },
    "renounceOwnership()": {
      "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
    },
    "setSLARegistry()": {
      "details": "sets the SLARegistry contract address and can only be called once"
    },
    "transferOwnership(address)": {
      "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
    }
  },
  "title": "StakeRegistry"
}
