{
  "address": "0x6BDd971179559439c052D4A4b4C9B02b33a0dfc8",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sla",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sloValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum SLORegistry.SLOType",
          "name": "sloType",
          "type": "uint8"
        }
      ],
      "name": "SLORegistered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_slaAddress",
          "type": "address"
        }
      ],
      "name": "isRespected",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_sloValue",
          "type": "uint256"
        },
        {
          "internalType": "enum SLORegistry.SLOType",
          "name": "_sloType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "_slaAddress",
          "type": "address"
        }
      ],
      "name": "registerSLO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registeredSLO",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "sloValue",
          "type": "uint256"
        },
        {
          "internalType": "enum SLORegistry.SLOType",
          "name": "sloType",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setSLARegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x508de43227de261fcc5d641081daebaf386946cdb46545aa0ca43238fa363aa3",
  "receipt": {
    "to": null,
    "from": "0x972614782a893ad3139418Ef00e17fE95896A7c6",
    "contractAddress": "0x6BDd971179559439c052D4A4b4C9B02b33a0dfc8",
    "transactionIndex": 23,
    "gasUsed": "342718",
    "logsBloom": "0x
    "blockHash": "0x00009b620000023fdeb668d48e0b4f2328ee54963aef3d8c6437a5a2f4f5c975",
    "transactionHash": "0x508de43227de261fcc5d641081daebaf386946cdb46545aa0ca43238fa363aa3",
    "logs": [],
    "blockNumber": 18069365,
    "cumulativeGasUsed": "6366828",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "f705a4dd828ad173a3a75fb3bd19df4d",
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sla\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sloValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum SLORegistry.SLOType\",\"name\":\"sloType\",\"type\":\"uint8\"}],\"name\":\"SLORegistered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_slaAddress\",\"type\":\"address\"}],\"name\":\"isRespected\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sloValue\",\"type\":\"uint256\"},{\"internalType\":\"enum SLORegistry.SLOType\",\"name\":\"_sloType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_slaAddress\",\"type\":\"address\"}],\"name\":\"registerSLO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registeredSLO\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"sloValue\",\"type\":\"uint256\"},{\"internalType\":\"enum SLORegistry.SLOType\",\"name\":\"sloType\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setSLARegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"SLORegistry is a contract for handling creation of service level objectives and querying those service level objectives\",\"methods\":{\"isRespected(uint256,address)\":{\"details\":\"external view function to check a value against the SLO\",\"params\":{\"_value\":\"The SLI value to check against the SL\"},\"returns\":{\"_0\":\"boolean with the SLO honored state\"}},\"registerSLO(uint256,uint8,address)\":{\"details\":\"public function for creating service level objectives\",\"params\":{\"_slaAddress\":\"3. -\",\"_sloType\":\"2. -\",\"_sloValue\":\"1. -\"}}},\"title\":\"SLORegistry\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@stacktical/dsla-contracts/contracts/SLORegistry.sol\":\"SLORegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@stacktical/dsla-contracts/contracts/SLORegistry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.6.6;\\npragma experimental ABIEncoderV2;\\n\\n/**\\n * @title SLORegistry\\n * @dev SLORegistry is a contract for handling creation of service level\\n * objectives and querying those service level objectives\\n */\\ncontract SLORegistry {\\n    enum SLOType {\\n        EqualTo,\\n        NotEqualTo,\\n        SmallerThan,\\n        SmallerOrEqualTo,\\n        GreaterThan,\\n        GreaterOrEqualTo\\n    }\\n\\n    struct SLO {\\n        uint256 sloValue;\\n        SLOType sloType;\\n    }\\n    /**\\n     * @dev SLO Registered event\\n     * @param sla 1. -\\n     * @param sloValue 2. -\\n     * @param sloType 3. -\\n     */\\n    event SLORegistered(address indexed sla, uint256 sloValue, SLOType sloType);\\n\\n    address private slaRegistry;\\n    mapping(address => SLO) public registeredSLO;\\n\\n    modifier onlySLARegistry {\\n        require(\\n            msg.sender == slaRegistry,\\n            'Should only be called using the SLARegistry contract'\\n        );\\n        _;\\n    }\\n\\n    function setSLARegistry() public {\\n        // Only able to trigger this function once\\n        require(\\n            address(slaRegistry) == address(0),\\n            'SLARegistry address has already been set'\\n        );\\n        slaRegistry = msg.sender;\\n    }\\n\\n    /**\\n     * @dev public function for creating service level objectives\\n     * @param _sloValue 1. -\\n     * @param _sloType 2. -\\n     * @param _slaAddress 3. -\\n     */\\n    function registerSLO(\\n        uint256 _sloValue,\\n        SLOType _sloType,\\n        address _slaAddress\\n    ) public onlySLARegistry {\\n        registeredSLO[_slaAddress] = SLO({\\n            sloValue: _sloValue,\\n            sloType: _sloType\\n        });\\n        emit SLORegistered(_slaAddress, _sloValue, _sloType);\\n    }\\n\\n    /**\\n     * @dev external view function to check a value against the SLO\\n     * @param _value The SLI value to check against the SL\\n     * @return boolean with the SLO honored state\\n     */\\n    function isRespected(uint256 _value, address _slaAddress)\\n        public\\n        view\\n        returns (bool)\\n    {\\n        SLO memory slo = registeredSLO[_slaAddress];\\n        SLOType sloType = slo.sloType;\\n        uint256 sloValue = slo.sloValue;\\n\\n        if (sloType == SLOType.EqualTo) {\\n            return _value == sloValue;\\n        }\\n\\n        if (sloType == SLOType.NotEqualTo) {\\n            return _value != sloValue;\\n        }\\n\\n        if (sloType == SLOType.SmallerThan) {\\n            return _value < sloValue;\\n        }\\n\\n        if (sloType == SLOType.SmallerOrEqualTo) {\\n            return _value <= sloValue;\\n        }\\n\\n        if (sloType == SLOType.GreaterThan) {\\n            return _value > sloValue;\\n        }\\n\\n        if (sloType == SLOType.GreaterOrEqualTo) {\\n            return _value >= sloValue;\\n        }\\n        revert(\\\"isRespected wasn't executed properly\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x15c7b1bb4b97a177cf56078bfcdace06a35e82cc68682e8f9f2414df99886cb1\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061053c806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c7ad72b146100515780631993b9df14610066578063a7b72ac51461008f578063f3881589146100b0575b600080fd5b61006461005f3660046103ae565b6100b8565b005b610079610074366004610382565b610197565b60405161008691906103fd565b60405180910390f35b6100a261009d366004610360565b6102d9565b6040516100869291906104e8565b6100646102f5565b6000546001600160a01b031633146100eb5760405162461bcd60e51b81526004016100e290610408565b60405180910390fd5b604051806040016040528084815260200183600581111561010857fe5b90526001600160a01b0382166000908152600160208181526040909220835181559183015182820180549192909160ff19169083600581111561014757fe5b0217905550905050806001600160a01b03167fc382b63ab3cdf2c0a86390b2ea6449f63ca4135a3feb56acebddc929412d45a9848460405161018a9291906104e8565b60405180910390a2505050565b60006101a1610332565b6001600160a01b038316600090815260016020818152604092839020835180850190945280548452918201549083019060ff1660058111156101df57fe5b60058111156101ea57fe5b9052506020810151815191925090600082600581111561020657fe5b141561021857851492506102d3915050565b600182600581111561022657fe5b14156102395785141592506102d3915050565b600282600581111561024757fe5b141561025957851092506102d3915050565b600382600581111561026757fe5b141561027a5785111592506102d3915050565b600482600581111561028857fe5b141561029a57851192506102d3915050565b60058260058111156102a857fe5b14156102bb5785101592506102d3915050565b60405162461bcd60e51b81526004016100e2906104a4565b92915050565b6001602081905260009182526040909120805491015460ff1682565b6000546001600160a01b03161561031e5760405162461bcd60e51b81526004016100e29061045c565b600080546001600160a01b03191633179055565b604080518082019091526000808252602082015290565b80356001600160a01b03811681146102d357600080fd5b600060208284031215610371578081fd5b61037b8383610349565b9392505050565b60008060408385031215610394578081fd5b823591506103a58460208501610349565b90509250929050565b6000806000606084860312156103c2578081fd5b833592506020840135600681106103d7578182fd5b915060408401356001600160a01b03811681146103f2578182fd5b809150509250925092565b901515815260200190565b60208082526034908201527f53686f756c64206f6e6c792062652063616c6c6564207573696e67207468652060408201527314d310549959da5cdd1c9e4818dbdb9d1c9858dd60621b606082015260800190565b60208082526028908201527f534c41526567697374727920616464726573732068617320616c7265616479206040820152671899595b881cd95d60c21b606082015260800190565b60208082526024908201527f6973526573706563746564207761736e27742065786563757465642070726f7060408201526365726c7960e01b606082015260800190565b82815260408101600683106104f957fe5b826020830152939250505056fea2646970667358221220fb0b510dd3b5ec05cd0b1e416829f45e89e74a9e9ebd4ce097caa5a153ae4d3764736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c80630c7ad72b146100515780631993b9df14610066578063a7b72ac51461008f578063f3881589146100b0575b600080fd5b61006461005f3660046103ae565b6100b8565b005b610079610074366004610382565b610197565b60405161008691906103fd565b60405180910390f35b6100a261009d366004610360565b6102d9565b6040516100869291906104e8565b6100646102f5565b6000546001600160a01b031633146100eb5760405162461bcd60e51b81526004016100e290610408565b60405180910390fd5b604051806040016040528084815260200183600581111561010857fe5b90526001600160a01b0382166000908152600160208181526040909220835181559183015182820180549192909160ff19169083600581111561014757fe5b0217905550905050806001600160a01b03167fc382b63ab3cdf2c0a86390b2ea6449f63ca4135a3feb56acebddc929412d45a9848460405161018a9291906104e8565b60405180910390a2505050565b60006101a1610332565b6001600160a01b038316600090815260016020818152604092839020835180850190945280548452918201549083019060ff1660058111156101df57fe5b60058111156101ea57fe5b9052506020810151815191925090600082600581111561020657fe5b141561021857851492506102d3915050565b600182600581111561022657fe5b14156102395785141592506102d3915050565b600282600581111561024757fe5b141561025957851092506102d3915050565b600382600581111561026757fe5b141561027a5785111592506102d3915050565b600482600581111561028857fe5b141561029a57851192506102d3915050565b60058260058111156102a857fe5b14156102bb5785101592506102d3915050565b60405162461bcd60e51b81526004016100e2906104a4565b92915050565b6001602081905260009182526040909120805491015460ff1682565b6000546001600160a01b03161561031e5760405162461bcd60e51b81526004016100e29061045c565b600080546001600160a01b03191633179055565b604080518082019091526000808252602082015290565b80356001600160a01b03811681146102d357600080fd5b600060208284031215610371578081fd5b61037b8383610349565b9392505050565b60008060408385031215610394578081fd5b823591506103a58460208501610349565b90509250929050565b6000806000606084860312156103c2578081fd5b833592506020840135600681106103d7578182fd5b915060408401356001600160a01b03811681146103f2578182fd5b809150509250925092565b901515815260200190565b60208082526034908201527f53686f756c64206f6e6c792062652063616c6c6564207573696e67207468652060408201527314d310549959da5cdd1c9e4818dbdb9d1c9858dd60621b606082015260800190565b60208082526028908201527f534c41526567697374727920616464726573732068617320616c7265616479206040820152671899595b881cd95d60c21b606082015260800190565b60208082526024908201527f6973526573706563746564207761736e27742065786563757465642070726f7060408201526365726c7960e01b606082015260800190565b82815260408101600683106104f957fe5b826020830152939250505056fea2646970667358221220fb0b510dd3b5ec05cd0b1e416829f45e89e74a9e9ebd4ce097caa5a153ae4d3764736f6c63430006060033",
  "devdoc": {
    "details": "SLORegistry is a contract for handling creation of service level objectives and querying those service level objectives",
    "methods": {
      "isRespected(uint256,address)": {
        "details": "external view function to check a value against the SLO",
        "params": {
          "_value": "The SLI value to check against the SL"
        },
        "returns": {
          "_0": "boolean with the SLO honored state"
        }
      },
      "registerSLO(uint256,uint8,address)": {
        "details": "public function for creating service level objectives",
        "params": {
          "_slaAddress": "3. -",
          "_sloType": "2. -",
          "_sloValue": "1. -"
        }
      }
    },
    "title": "SLORegistry"
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 9389,
        "contract": "@stacktical/dsla-contracts/contracts/SLORegistry.sol:SLORegistry",
        "label": "slaRegistry",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9393,
        "contract": "@stacktical/dsla-contracts/contracts/SLORegistry.sol:SLORegistry",
        "label": "registeredSLO",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(SLO)9378_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_enum(SLOType)9373": {
        "encoding": "inplace",
        "label": "enum SLORegistry.SLOType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_struct(SLO)9378_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct SLORegistry.SLO)",
        "numberOfBytes": "32",
        "value": "t_struct(SLO)9378_storage"
      },
      "t_struct(SLO)9378_storage": {
        "encoding": "inplace",
        "label": "struct SLORegistry.SLO",
        "members": [
          {
            "astId": 9375,
            "contract": "@stacktical/dsla-contracts/contracts/SLORegistry.sol:SLORegistry",
            "label": "sloValue",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9377,
            "contract": "@stacktical/dsla-contracts/contracts/SLORegistry.sol:SLORegistry",
            "label": "sloType",
            "offset": 0,
            "slot": "1",
            "type": "t_enum(SLOType)9373"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}